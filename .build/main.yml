trigger:
- main
- feature/*

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
    - job: build
      displayName: build
        
      steps:
      - bash: env
        displayName: env vars

      - bash: echo "##vso[task.setvariable variable=ANDROID_HOME;]$ANDROID_HOME"
      - bash: echo "##vso[task.setvariable variable=ANDROID_NDK;]$ANDROID_NDK_LATEST_HOME"

      - script: 'sudo apt-get install libcurl4-openssl-dev'
        workingDirectory: '$(Build.SourcesDirectory)'

      - script: 'mkdir android-tools'
        workingDirectory: '$(Build.ArtifactStagingDirectory)'

      - script: './bootstrap'
        workingDirectory: '$(Build.SourcesDirectory)/tools/depends/'
        displayName: "Bootstrap"
        
      - script: './configure --with-tarballs=$(Build.ArtifactStagingDirectory)/android-tools/xbmc-tarballs --host=i686-linux-android --with-sdk-path=$(ANDROID_HOME) --with-ndk-path=$(ANDROID_NDK) --prefix=$(Build.ArtifactStagingDirectory)/android-tools/xbmc-depends'
        workingDirectory: '$(Build.SourcesDirectory)/tools/depends/'
        displayName: "Configure"
        
      - script: 'make -j1'
        workingDirectory: '$(Build.SourcesDirectory)/tools/depends/'
        displayName: "Build tools"

      - script: 'make -j$(getconf _NPROCESSORS_ONLN) -C tools/depends/target/binary-addons'  
        workingDirectory: '$(Build.SourcesDirectory)/'
        displayName: "Build addons"

      - script: 'make -C tools/depends/target/cmakebuildsys'  
        workingDirectory: '$(Build.SourcesDirectory)/'
        displayName: "Prepare Kodi Build"

      - script: 'make -j$(getconf _NPROCESSORS_ONLN)'  
        workingDirectory: '$(Build.SourcesDirectory)/'
        displayName: "Build Kodi"

      - script: 'make apk'  
        workingDirectory: '$(Build.SourcesDirectory)/'
        displayName: "Make APK"

      - task: CopyFiles@2
        displayName: 'Copy apk'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: |
              *.apk
          TargetFolder: '$(build.artifactstagingdirectory)/package/'
          CleanTargetFolder: false
          flattenFolders: false
          OverWrite: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publishing apk as artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)/package/'
          ArtifactName: 'kodi'
          publishLocation: 'Container'

      - task: PublishBuildArtifacts@1
        displayName: 'Publishing logs as artifact'
        condition: always()
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)/tools/depends/native/cmake/x86_64-linux-native/CMakeFiles/'
          ArtifactName: 'BuildLogs'
          publishLocation: 'Container'